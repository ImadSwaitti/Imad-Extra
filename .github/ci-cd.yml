name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  ECR_REGISTRY: 123456789012.dkr.ecr.us-east-1      # Replace with your real account ECR URI
  ECR_REPOSITORY: employee-service
  ECS_CLUSTER: employee-cluster
  ECS_SERVICE: employee-service
  TASK_FAMILY: employee-task

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Run unit tests
        run: mvn test -q

      - name: Run Checkstyle (Static Code Analysis)
        run: |
          mvn checkstyle:checkstyle -Dcheckstyle.config.location=src/main/java/com/lab/employee_service/config/checkstyle.xml

      - name: Upload Checkstyle Report
        uses: actions/upload-artifact@v3
        with:
          name: checkstyle-report
          path: target/checkstyle-result.xml

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY

      - name: Build and Push Docker image
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Deploy to ECS
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          TASK_DEF_JSON=$(aws ecs describe-task-definition --task-definition $TASK_FAMILY --query "taskDefinition{family:family,containerDefinitions:containerDefinitions}" --output json)
          UPDATED_TASK_DEF=$(echo "$TASK_DEF_JSON" | jq --arg IMAGE "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" '.containerDefinitions[0].image = $IMAGE')
          echo "$UPDATED_TASK_DEF" > new-task-def.json
          aws ecs register-task-definition --cli-input-json file://new-task-def.json --family $TASK_FAMILY
          NEW_TASK_DEF_ARN=$(aws ecs list-task-definitions --family-prefix $TASK_FAMILY --sort DESC --max-items 1 --query "taskDefinitionArns[0]" --output text)
          aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --task-definition $NEW_TASK_DEF_ARN
